{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ADF-VB8B-ETL-AKP"
		},
		"DS_ADLS_Parquet_SINK_EVENT_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DS_ADLS_Parquet_SINK_EVENT'"
		},
		"DS_Excel_STORAGE_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DS_Excel_STORAGE'"
		},
		"DS_SNOW_EVENT_Parquet_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'DS_SNOW_EVENT_Parquet'"
		},
		"LS_AZSQLDB_CSV_META_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQLDB_CSV_META'"
		},
		"LS_AZSQLDB_META_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQLDB_META'"
		},
		"LS_AZSQL_DB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQL_DB'"
		},
		"LS_AZSQL_DB1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQL_DB1'"
		},
		"LS_AZSQL_SRCDB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_AZSQL_SRCDB'"
		},
		"LS_BULK_DelimitedText_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_BULK_DelimitedText'"
		},
		"LS_BULK_Parquet_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_BULK_Parquet'"
		},
		"LS_CSV_PARQ_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_CSV_PARQ'"
		},
		"LS_CSV_PARQ_SINK_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_CSV_PARQ_SINK'"
		},
		"LS_EXCEL_PARQ_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_EXCEL_PARQ'"
		},
		"LS_JSON_Parquet_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_JSON_Parquet'"
		},
		"LS_Json_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_Json'"
		},
		"LS_REST_Parquet_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_REST_Parquet'"
		},
		"LS_SFTP_ADLS_PARQ_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_SFTP_ADLS_PARQ'"
		},
		"LS_SFTP_SINK_PARQ_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_SFTP_SINK_PARQ'"
		},
		"LS_SQL_ADLS_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_SQL_ADLS'"
		},
		"LS_Snowflake_PARQ_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Snowflake_PARQ'"
		},
		"LS_SqlServerTable_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SqlServerTable'"
		},
		"DS_ADLS_Parquet_SINK_EVENT_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"DS_Excel_STORAGE_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevisionboardraw01kp.dfs.core.windows.net/"
		},
		"LS_AZSQLDB_CSV_META_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev1.database.windows.net"
		},
		"LS_AZSQLDB_CSV_META_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQLDB_CSV_META_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_AZSQLDB_META_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev1.database.windows.net"
		},
		"LS_AZSQLDB_META_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQLDB_META_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_AZSQL_DB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev1.database.windows.net"
		},
		"LS_AZSQL_DB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQL_DB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_AZSQL_DB1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev1.database.windows.net"
		},
		"LS_AZSQL_DB1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQL_DB1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_AZSQL_SRCDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sql-srvr-vb-dev1.database.windows.net"
		},
		"LS_AZSQL_SRCDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sql-db-vb-dev"
		},
		"LS_AZSQL_SRCDB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "access-data-dev"
		},
		"LS_BULK_DelimitedText_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevisionboardraw01kp.dfs.core.windows.net/"
		},
		"LS_BULK_Parquet_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_CSV_PARQ_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevisionboardraw01kp.dfs.core.windows.net/"
		},
		"LS_CSV_PARQ_SINK_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_EXCEL_PARQ_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_JSON_Parquet_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_Json_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevisionboardraw01kp.dfs.core.windows.net/"
		},
		"LS_REST_Parquet_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_RestResource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://retoolapi.dev/fxB8hB/data"
		},
		"LS_SFTP_ADLS_PARQ_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevisionboardraw01kp.dfs.core.windows.net/"
		},
		"LS_SFTP_SINK_PARQ_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_SNOWFLAKE_Parquet_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'LS_SNOWFLAKE_Parquet'"
		},
		"LS_SQL_ADLS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adlsdevvbsorce01kp.dfs.core.windows.net/"
		},
		"LS_Snowflake_PARQ_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "DBAZURESNOW"
		},
		"LS_SqlServerTable_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ABIN-K-P\\SQLEXPRESS"
		},
		"LS_SqlServerTable_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "vbadeproject"
		},
		"LS_SqlServerTable_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sa"
		},
		"EVENT_TRIGGER_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/73af3cf0-d486-4a68-b848-5e962c95af77/resourceGroups/VB_DEV_B8_ETL/providers/Microsoft.Storage/storageAccounts/blobstoragenow"
		},
		"trigger1_properties_PL1_MASTER_parameters_Trigger": {
			"type": "string",
			"defaultValue": "Tr_sample_csv"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/PL1_MASTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SET_VAR_TRIGGER",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Trigger_variable",
							"value": {
								"value": "@if(equals(pipeline().parameters.Trigger, null),pipeline().TriggerName,pipeline().parameters.Trigger)\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "EXEC_RAW_DATA",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET_VAR_TRIGGER",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL2_RAW_DATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"Trigger": {
									"value": "@pipeline().parameters.Trigger",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Trigger_variable": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-14T17:30:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL2_RAW_DATA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL2_RAW_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_L2_TYPE",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L2_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SWITCH_SOURCE",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_L2_TYPE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_L2_TYPE').output.firstRow.L2_switch_type\n",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "CloudStorage",
									"activities": [
										{
											"name": "EXEC_PL3_CLOUD",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL3_CLOUDSG_CSV_EXCEL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "api",
									"activities": [
										{
											"name": "Wait1",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "sql",
									"activities": [
										{
											"name": "Wait2",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-14T17:30:07Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB')]",
				"[concat(variables('factoryId'), '/pipelines/PL3_CLOUDSG_CSV_EXCEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL3_CLOUDSG_CSV_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_SRC_FILES",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L3_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_SRCDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch_SRC_LOC_CSV_EXCEL",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_SRC_FILES",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_SRC_FILES').output.firstRow.L3_switch_type\n",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Azure",
									"activities": [
										{
											"name": "Exec_file_CSV",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_CSV",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "AWS",
									"activities": [
										{
											"name": "Wait1",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								},
								{
									"value": "GCP",
									"activities": [
										{
											"name": "Wait2",
											"type": "Wait",
											"dependsOn": [],
											"userProperties": [],
											"typeProperties": {
												"waitTimeInSeconds": 1
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-15T17:09:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_SRCDB')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CSV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_BULK')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_BULK",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_BULK_DelimitedText",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_BULK_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-13T17:46:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_BULK_DelimitedText')]",
				"[concat(variables('factoryId'), '/datasets/DS_BULK_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_CSV')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_CSV",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SP-START-LOG-ENTRY",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SET_MAPPING_VARIABLE",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_CSV_PARQ",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_CSV_PARQ_SINK",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "LKUP_JOB_DETAILS",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[vb_get_job_dtls]",
								"storedProcedureParameters": {
									"TriggerName": {
										"type": "String",
										"value": {
											"value": "@pipeline().parameters.Trigger",
											"type": "Expression"
										}
									}
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQLDB_CSV_META",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SP-START-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "LKUP_JOB_DETAILS",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_start_log_entry]",
							"storedProcedureParameters": {
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid\n",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_CSV_META",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SET_MAPPING_VARIABLE",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Mapping",
							"value": {
								"value": "{\n    \"type\": \"TabularTranslator\",\n    \"mappings\": [\n        {\n            \"source\": {\n                \"name\": \"review_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewid\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"order_id\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"orderid\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_score\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewscore\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_comment_title\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcommenttitle\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_comment_message\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcommentmessage\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_creation_date\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewcreationdate\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n        {\n            \"source\": {\n                \"name\": \"review_answer_timestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"String\"\n            },\n            \"sink\": {\n                \"name\": \"reviewanswertimestamp\",\n                \"type\": \"String\",\n                \"physicalType\": \"UTF8\"\n            }\n        },\n    ],\n    \"typeConversion\": true,\n    \"typeConversionSettings\": {\n        \"allowDataTruncation\": true,\n        \"treatBooleanAsNumber\": false\n    }\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP-SUCESS-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CPY_CSV",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": null,
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid\n",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_CSV_META",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "SP-FAIL-LOG-ENTRY",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "CPY_CSV",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[vb_end_log_entry]",
							"storedProcedureParameters": {
								"error": {
									"value": {
										"value": "@activity('CPY_CSV').error.message\n",
										"type": "Expression"
									},
									"type": "String"
								},
								"jobid": {
									"value": {
										"value": "@activity('LKUP_JOB_DETAILS').output.firstRow.jobid\n",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"pipeline_id": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_AZSQLDB_CSV_META",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-15T17:12:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_CSV_PARQ')]",
				"[concat(variables('factoryId'), '/datasets/DS_CSV_PARQ_SINK')]",
				"[concat(variables('factoryId'), '/datasets/DS_AZSQLDB_CSV_META')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_CSV_META')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EVENT_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_EVENT_TRIGGER",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*.parquet",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SNOW_EVENT_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ADLS_Parquet_SINK_EVENT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-15T17:41:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SNOW_EVENT_Parquet')]",
				"[concat(variables('factoryId'), '/datasets/DS_ADLS_Parquet_SINK_EVENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_Excel_STORAGE",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_EXCEL_PARQ",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"variables": {
					"Mapping": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-14T17:42:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Excel_STORAGE')]",
				"[concat(variables('factoryId'), '/datasets/DS_EXCEL_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_JSON')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_JSON",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*.json",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Json",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_JSON_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-13T17:46:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Json')]",
				"[concat(variables('factoryId'), '/datasets/DS_JSON_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_RESTAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_RESTAPI",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_RestResource",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_REST_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-13T17:46:36Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_RestResource')]",
				"[concat(variables('factoryId'), '/datasets/DS_REST_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SFTP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_SFTP",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "ParquetReadSettings"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SFT_PARQ",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SFTP_SINK_PARQ",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-12T16:21:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SFT_PARQ')]",
				"[concat(variables('factoryId'), '/datasets/DS_SFTP_SINK_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SNOWFLAKE')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SNOW_CPY",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SnowflakeV2Source",
								"exportSettings": {
									"type": "SnowflakeExportCopyCommand"
								}
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DS_Snowflake_PARQ",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SNOWFLAKE_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-12T18:05:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_Snowflake_PARQ')]",
				"[concat(variables('factoryId'), '/datasets/DS_SNOWFLAKE_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SQL_PARQ')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CPY_SQL_ADLS",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "ParquetWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_SqlServerTable",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_SQL_Parquet",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-12T17:32:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_SqlServerTable')]",
				"[concat(variables('factoryId'), '/datasets/DS_SQL_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_SWITCH_CSV_EXCEL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKUP_GET_FILETYPE_CSV_EXCEL",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT DISTINCT L4_switch_type \nFROM dbo.vb_tbl_job a\nJOIN dbo.vb_tbl_trigger b ON a.trigger_id = b.trigger_id\nWHERE b.trigger_name = '@{pipeline().parameters.Trigger}'\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_AZSQL_DB1",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Switch_CSV_EXCEL_FILES",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "LKUP_GET_FILETYPE_CSV_EXCEL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@activity('LKUP_GET_FILETYPE_CSV_EXCEL').output.firstRow.L4_switch_type\n",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "csv",
									"activities": [
										{
											"name": "Execute Pipeline1",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_CSV",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								},
								{
									"value": "excel",
									"activities": [
										{
											"name": "Execute Pipeline2",
											"type": "ExecutePipeline",
											"dependsOn": [],
											"policy": {
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"pipeline": {
													"referenceName": "PL_EXCEL",
													"type": "PipelineReference"
												},
												"waitOnCompletion": true,
												"parameters": {
													"Trigger": {
														"value": "@pipeline().parameters.Trigger",
														"type": "Expression"
													}
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"Trigger": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-09-14T17:42:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AZSQL_DB1')]",
				"[concat(variables('factoryId'), '/pipelines/PL_CSV')]",
				"[concat(variables('factoryId'), '/pipelines/PL_EXCEL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Parquet_SINK_EVENT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_ADLS_Parquet_SINK_EVENT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "geolocation_zip_code_prefix",
						"type": "UTF8"
					},
					{
						"name": "geolocation_lat",
						"type": "UTF8"
					},
					{
						"name": "geolocation_lng",
						"type": "UTF8"
					},
					{
						"name": "geolocation_city",
						"type": "UTF8"
					},
					{
						"name": "geolocation_state",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_ADLS_Parquet_SINK_EVENT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQLDB_CSV_META')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQLDB_CSV_META",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQLDB_CSV_META')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQL_DB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQL_DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_DB1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQL_DB1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQL_DB1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AZSQL_SRCDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AZSQL_SRCDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AZSQL_SRCDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BULK_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BULK_DelimitedText",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "olist_geolocation_dataset.csv",
						"folderPath": "bulk",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "geolocation_zip_code_prefix",
						"type": "String"
					},
					{
						"name": "geolocation_lat",
						"type": "String"
					},
					{
						"name": "geolocation_lng",
						"type": "String"
					},
					{
						"name": "geolocation_city",
						"type": "String"
					},
					{
						"name": "geolocation_state",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BULK_DelimitedText')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_BULK_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_BULK_Parquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'bulk/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "order_id",
						"type": "UTF8"
					},
					{
						"name": "payment_sequential",
						"type": "UTF8"
					},
					{
						"name": "payment_type",
						"type": "UTF8"
					},
					{
						"name": "payment_installments",
						"type": "UTF8"
					},
					{
						"name": "payment_value",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_BULK_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_PARQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CSV_PARQ",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "CSV",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "payment_sequential",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "payment_installments",
						"type": "String"
					},
					{
						"name": "payment_value",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_CSV_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_CSV_PARQ_SINK')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_CSV_PARQ_SINK",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'csv/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "\"order_id\"",
						"type": "UTF8"
					},
					{
						"name": "\"customer_id\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_status\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_purchase_timestamp\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_approved_at\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_delivered_carrier_date\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_delivered_customer_date\"",
						"type": "UTF8"
					},
					{
						"name": "\"order_estimated_delivery_date\"",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_CSV_PARQ_SINK')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_EXCEL_PARQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_EXCEL_PARQ",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'excel/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_EXCEL_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Excel_STORAGE')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_Excel_STORAGE",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Worksheet",
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "olist_order_reviews_dataset.xlsx",
						"folderPath": "excel",
						"fileSystem": "input"
					}
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_Excel_STORAGE')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_JSON_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_JSON_Parquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'json/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "geolocation_zip_code_prefix",
						"type": "UTF8"
					},
					{
						"name": "geolocation_lat",
						"type": "UTF8"
					},
					{
						"name": "geolocation_lng",
						"type": "UTF8"
					},
					{
						"name": "geolocation_city",
						"type": "UTF8"
					},
					{
						"name": "geolocation_state",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_JSON_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Json",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "json",
						"fileSystem": "input"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"_id": {
							"type": "string"
						},
						"index": {
							"type": "integer"
						},
						"guid": {
							"type": "string"
						},
						"isActive": {
							"type": "boolean"
						},
						"balance": {
							"type": "string"
						},
						"picture": {
							"type": "string"
						},
						"age": {
							"type": "integer"
						},
						"eyeColor": {
							"type": "string"
						},
						"name": {
							"type": "string"
						},
						"gender": {
							"type": "string"
						},
						"company": {
							"type": "string"
						},
						"email": {
							"type": "string"
						},
						"phone": {
							"type": "string"
						},
						"address": {
							"type": "string"
						},
						"about": {
							"type": "string"
						},
						"registered": {
							"type": "string"
						},
						"latitude": {
							"type": "number"
						},
						"longitude": {
							"type": "number"
						},
						"tags": {
							"type": "array",
							"items": {
								"type": "string"
							}
						},
						"friends": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"id": {
										"type": "integer"
									},
									"name": {
										"type": "string"
									}
								}
							}
						},
						"greeting": {
							"type": "string"
						},
						"favoriteFruit": {
							"type": "string"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Json')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_REST_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_REST_Parquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'rest/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_REST_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_RestResource')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_RestResource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_RestResource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFTP_SINK_PARQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_SINK_PARQ",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat(\n    'sftp/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_SINK_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SFT_PARQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SFTP_ADLS_PARQ",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "olist_customers_dataset.csv",
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SFTP_ADLS_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOWFLAKE_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SNOWFLAKE_Parquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": {
							"value": "@concat(\n    'snowflake/',\n    formatDateTime(utcNow(),'yyyy'),'/',\n    formatDateTime(utcNow(),'MM'),'/',\n    formatDateTime(utcNow(),'dd')\n    )",
							"type": "Expression"
						},
						"container": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SNOWFLAKE_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOW_EVENT_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DS_SNOW_EVENT_Parquet",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "INDEX",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "ORDER_ID",
						"type": "UTF8"
					},
					{
						"name": "ORDER_ITEM_ID",
						"type": "DECIMAL",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "PRODUCT_ID",
						"type": "UTF8"
					},
					{
						"name": "SELLER_ID",
						"type": "UTF8"
					},
					{
						"name": "SHIPPING_LIMIT_DATE",
						"type": "TIMESTAMP_MILLIS"
					},
					{
						"name": "PRICE",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					},
					{
						"name": "FREIGHT_VALUE",
						"type": "DECIMAL",
						"precision": 10,
						"scale": 2
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DS_SNOW_EVENT_Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SQL_Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_ADLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sql",
						"fileSystem": "input"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_ADLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Snowflake_PARQ')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Snowflake_PARQ",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [],
				"typeProperties": {
					"schema": "AZURE_INTEGRATION",
					"table": "ORDER_ITEMS_DATASET"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Snowflake_PARQ')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SqlServerTable",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "\"order_id\"",
						"type": "varchar"
					},
					{
						"name": "\"customer_id\"",
						"type": "varchar"
					},
					{
						"name": "\"order_status\"",
						"type": "varchar"
					},
					{
						"name": "\"order_purchase_timestamp\"",
						"type": "varchar"
					},
					{
						"name": "\"order_approved_at\"",
						"type": "varchar"
					},
					{
						"name": "\"order_delivered_carrier_date\"",
						"type": "varchar"
					},
					{
						"name": "\"order_delivered_customer_date\"",
						"type": "varchar"
					},
					{
						"name": "\"order_estimated_delivery_date\"",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "olist_orders_dataset"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SqlServerTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ADLS_Parquet_SINK_EVENT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DS_ADLS_Parquet_SINK_EVENT_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DS_ADLS_Parquet_SINK_EVENT_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_Excel_STORAGE')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DS_Excel_STORAGE_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DS_Excel_STORAGE_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_SNOW_EVENT_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('DS_SNOW_EVENT_Parquet_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB_CSV_META')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQLDB_CSV_META_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQLDB_CSV_META_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQLDB_CSV_META_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQLDB_CSV_META_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQLDB_META')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQLDB_META_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQLDB_META_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQLDB_META_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQLDB_META_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQL_DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQL_DB_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQL_DB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQL_DB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQL_DB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQL_DB1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQL_DB1_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQL_DB1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQL_DB1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQL_DB1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AZSQL_SRCDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_AZSQL_SRCDB_properties_typeProperties_server')]",
					"database": "[parameters('LS_AZSQL_SRCDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_AZSQL_SRCDB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_AZSQL_SRCDB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BULK_DelimitedText')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_BULK_DelimitedText_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_BULK_DelimitedText_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_BULK_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_BULK_Parquet_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_BULK_Parquet_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_CSV_PARQ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_CSV_PARQ_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_CSV_PARQ_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_CSV_PARQ_SINK')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_CSV_PARQ_SINK_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_CSV_PARQ_SINK_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_EXCEL_PARQ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_EXCEL_PARQ_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_EXCEL_PARQ_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_JSON_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_JSON_Parquet_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_JSON_Parquet_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Json')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_Json_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_Json_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_REST_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_REST_Parquet_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_REST_Parquet_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_RestResource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_RestResource_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SFTP_ADLS_PARQ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_SFTP_ADLS_PARQ_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_SFTP_ADLS_PARQ_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SFTP_SINK_PARQ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_SFTP_SINK_PARQ_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_SFTP_SINK_PARQ_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SNOWFLAKE_Parquet')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('LS_SNOWFLAKE_Parquet_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_ADLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_SQL_ADLS_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_ADLS_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Snowflake_PARQ')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "XYMVSHV-IB71122",
					"user": "abinkp123",
					"database": "[parameters('LS_Snowflake_PARQ_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Snowflake_PARQ_password')]"
					}
				},
				"version": "1.1"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SqlServerTable')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('LS_SqlServerTable_properties_typeProperties_server')]",
					"database": "[parameters('LS_SqlServerTable_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": true,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SqlServerTable_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SqlServerTable_password')]"
					}
				},
				"connectVia": {
					"referenceName": "Self-integrationRuntime2",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Self-integrationRuntime2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/EVENT_TRIGGER')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_EVENT_TRIGGER",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/input/blobs/",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('EVENT_TRIGGER_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated",
						"Microsoft.Storage.BlobDeleted"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_EVENT_TRIGGER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL1_MASTER",
							"type": "PipelineReference"
						},
						"parameters": {
							"Trigger": "[parameters('trigger1_properties_PL1_MASTER_parameters_Trigger')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-09-16T17:16:00",
						"endTime": "2025-09-17T17:16:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL1_MASTER')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Self-integrationRuntime2')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		}
	]
}